<?php

namespace App\Http\Controllers;

use App\Http\Requests\SeatRequest;
use App\Http\Resources\SeatResource;
use App\Models\Seat;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Validator;

class SeatController extends Controller
{


    public function index(Request $request)
    {
        $user = $request->user();
        $perPage = request('per_page', 10000000000);
        $search = request('search', '');
        $sortField = request('sort_field', 'updated_at');
        $sortDirection = request('sort_direction', 'desc');



        $data =  Seat::with("bus")
        ->where('user_id', $user->id)
        ->where(function($query) use ($search){
            $query->where('bus_id', 'LIKE', '%'.$search.'%');

        })
         ->orderBy($sortField, $sortDirection)
        ->paginate($perPage);

        return SeatResource::collection($data);

     }
    public function store(Request $request)
    {
        $user = $request->user();

        // Validate the request data
        $validator = Validator::make($request->all(), [
            'bus_id' => 'required|exists:App\Models\Bus,id',
            'capacity' => 'required',
        ]);

        // Check if validation fails
        if ($validator->fails()) {
            return response()->json(['errors' => $validator->errors()], 422);
        }

        // Create an array to hold the seats
        $seats = [];

        // Loop to create seats
        for ($i = 1; $i <= $request->capacity; $i++) {
            $seat = new Seat();
            $seat->seatNumber = $i;
            $seat->availability = "available";
            $seat->id = $i;
           // $seat->seat_id=
            $seats[] = $seat;
        }

        // Create a new Seat instance with validated data
        $seat = Seat::create([

            'bus_id' => $request->bus_id,
            'user_id' => $user->id,
            'data' => $seats,
        ]);

        // Return the created Seat resource
        return new SeatResource($seat);
    }

    public function show($id)
    {


        $purchase = Seat::with("bus")->where('id', $id)->firstOrFail();
        return new SeatResource($purchase);

       }

}
